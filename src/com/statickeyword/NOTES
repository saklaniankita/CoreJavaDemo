-> Static methods can be overloaded but not overridde
-> Static means "same for all the instances". So to access it we do not need to create any instance 
    public class Example{
    	private Static String name = "Ankita";
    	publc void show{
    			System.out.println("
    		}
    	
-> An inner class CAN be declared static but NOT the top level class
-> Static means same for all instances. There is no point of creating a top level class as static.

-> Following are major differences between static inner class and non-static inner class. 
   Static inner class is also called nested class

1) Nested static class doesn’t need reference of Outer class, 
   but Non-static inner class requires Outer class reference.
   {Refer TestClass3.java}

2) Inner class(or non-static nested class) can access both static and non-static members of Outer class. 
   A static class can access static members directly. And to access non static members of outer class,
   it will have to create an instance of outer class.s
   {Refer TestClass4.java}

3) An instance of Inner class cannot be created without an instance of outer class and 
   an Inner class can reference data and methods defined in Outer class in which it nests, 
   so we don’t need to pass reference of an object to the constructor of the Inner class. 
   For this reason Inner classes can make program simple and concise.